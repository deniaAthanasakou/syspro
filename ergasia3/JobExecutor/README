Ονοματεπώνυμο: 	Αντωνία Αθανασάκου
ΑΜ:				1115201400004

Εργασία 2η Προγραμματισμός Συστημάτων

	
	Αρχεία Πηγαίου Κώδικα, Δομές και Σχεδιαστικές Επιλογές

main.c	
	Στη συνάρτηση main, παίρνω ως ορίσματα το όνομα του αρχείου εισόδου και προαιρετικά τον αριθμό των διεργασιών-workers (default τιμή είναι 5). Στη συνέχεια ελέγχω αυτά τα ορίσματα και, αν δεν είναι ορθά, εμφανίζω 	μήνυμα λάθους και τερματίζεται το πρόγραμμα.
	Δημιουργώ ένα δείκτη σε μια δομή PathStruct στην οποία εισάγω τα δεδομένα του αρχείου εισόδου. Αρχικά το μέγεθος του πίνακα της δομής είναι 5 και κάθε φορά που απαιτείται, το μέγεθος διπλασιάζεται.
	Αν ο αριθμός των φακέλων που υπάρχουν στο αρχείο εισόδου είναι μικρότερος από τον αριθμό διεργασιών, αλλάζω τον δεύτερο.
	Έπειτα δημιουργώ τη δομή ContainsTrie στην οποία θα εισαχθούν οι λέξεις των κειμένων από την κάθε διεργασία και 2 named pipes για κάθε διεργασία. 
	Σε μια δομή επανάληψης δημιουργώ τις διεργασίες και τους δίνω τους φακέλους που τους αντιστοιχούν και αυτές αρχικοποιούν το ContainsTrie.
	Στη συνέχεια, αν βρίσκομαι στη διεργασία-γονέα παίρνω την είσοδο του χρήστη και καλώ τη συνάρτηση server, για να επικοινωνήσει με τις διεργασίες. Στο τέλος κλείνω τα pipes.
	Αν, αντιθέτως, βρίσκομαι σε διεργασία παιδί, δημιουργώ τα log files και καλώ τη συνάρτηση client η οποία σύμφωνα με την είσοδο του χρήστη θα καλέσει κάποιες συναρτήσεις. Στο τέλος διαγράφω τα pipes και τις δομές που χρησιμοποιήθηκαν και κάνω exit(0).
	Η διεργασία-γονέας περιμένει μέχρι να τερματίσουν όλοι οι workers και στη συνέχεια καταστρέφει τις δομές που είχε δημιουργήσει.

Δομή ContainsTrie
	Η δομή αυτή περιλαμβάνει ένα Map στο οποίο αποθηκεύονται τα μονοπάτια των αρχείων και για κάθε αρχείο οι γραμμές του, ένα δείκτη σε δομή BytesWordsLinesStruct που  περιλαμβάνει το όνομα του αρχείου και το σύνολο 	των bytes, των λέξεων και των γραμμών που έχει και ένα σύνολο από trie-nodes. Η δομή Trie είναι ίδια με αυτή της προηγούμενης εργασίας, με τη διαφορά ότι το postingList περιλαμβάνει τα ονόματα των αρχείων στα 		οποία υπάρχει η λέξη και τις γραμμές και τα offsets (τα offset δεν χρειάστηκε να τα χρησιμοποιήσω κάπου).

instructions.c
	Το αρχείο αυτό περιλαμβάνει τις συναρτήσεις 
		search: 			Για κάθε διαφορετική λέξη αναζήτησης βρίσκει τα αρχεία και τις γραμμές στις οποίες υπάρχει και τις εισάγει σε μια δομή SearchStruct την οποία και επιστρέφει. Στη δομή αυτή δεν εισάγται πάνω από μια 						φορά η ίδια γραμμή.
		maxCount: 			Ελέγχει αν δόθηκε μόνο μια λέξη και αν όχι εμφανίζει μήνυμα λάθους. Αλλιώς έισάγει σε μια δομή FileInfoMinMax το όνομα του αρχείου στο οποίο η λέξη εμφανίζεται τις περισσότερες φορές και την 								επιστρέφει.
		minCount:   		Παρόμοια με τη maxCount.
		wc: 				Εισάγει σε μια δομή το σύνολο των bytes, των λέξεων και των γραμμών που υπάρχουν στα αρχεία που χειρίζεται η διεργασία και την επιστρέφει.
		lineAlreadyExists: 	Βοηθητική συνάρτηση της search, για να μην εισαχθεί στη δομή SearchStruct πάνω από μια φορά, κάποια γραμμή αρχείου. 

process.c
	server: Αυτή η συνάρτηση γράφει σε κάθε pipe (για γράψιμο) που αντιστοιχεί στις διεργασίες, την εντολή του χρήστη. Στη συνέχεια διαβάζει από τα άλλα pipes, αυτά που επέστρεψαν οι διεργασίες.
			Αν η εντολή search ολοκληρώθηκε με επιτυχία, τότε εμφανίζει τα ονόματα των αρχείων και τους αριθμούς και τα περιέχομενα των γραμμών. Αν όμως ο χρόνος εκτύπωσης ξεπεράσει τα deadline δευτερόλεπτα που έδωσε 				ο χρήστης, σταματάει η εκτύπωση. Στο τέλος εκτυπώνεται ο αριθμός των workers που εκτύπωσαν επιτυχημένα.
			Αν η εντολή maxcount ολοκληρώθηκε με επιτυχία, βρίσκει το αρχείο που περιέχει τη λέξη περισσότερες φορές και εμφανίζει κατάλληλο μήνυμα.
			Παρόμοια εμφανίζεται μήνυμα και για την εντολή mincount.
			Στην εντολή wc, υπολογίζονται και εκτυπώνονται τα συνολικά bytes, λέξεις και αριθμοί γραμμών.
			Αν η εντολή ήταν η exit, τοτε στο τέλος της επανάληψης θα επιστραφεί 0, έτσι ώστε να τερματιστεί το πρόγραμμα.

	client: Η συνάρτηση αυτή διαβάζει από το pipe την εντολή του χρήστη και καλεί τις συναρτήσεις του αρχείου instructions.c. Έπειτα δημιουργεί συμβολοσειρές για το αντίστοιχο αποτέλεσμα και τις γράφει στο άλλο pipe.
			Στην εντολή search, ελέγχει και αν δόθηκε σωστή τιμή deadline.
			Αν η εντολή είναι η exit, τοτε θα επιστραφεί 0.
			Σε αυτή τη συνάρτηση γράφονται επίσης τα δεδομένα στα log files.

printLog.c
	Περιλαμβάνει συναρτήσεις για την εκτύπωση σε αρχείο.


Bash:
	Δημιούργησα ένα αρχείο bash στο φάκελο bash, αλλά λόγω έλλειψης χρόνου δεν πρόλαβα να το ολοκληρώσω.


	Μεταγλώττιση/Εκτέλεση
Για την μεταγλώττιση των αρχείων πηγαίου κώδικα, δημιούργησα ένα αρχείο Makefile. Συνεπώς με την εντολή make, το αρχείο μεταγλωττίζεται και διαγράφονται τα object files, καθώς και τα περιεχόμενα των φακέλων tmp kai log.
Όσο αφορά την εκτέλεση του προγράμματος, χρείαζεται η εντολή ./jobExecutor -d docfile -w numWorkers.
Το κομμάτι -w numWorkers είναι προαιρετικό και σε περίπτωση που δεν δοθεί τιμή από τον χρήστη, παίρνει την τιμή 5.

	Σχόλια:	
Τα FIFO δημιουργούνται στον φάκελο tmp.
Έτρεξα επίσης το πρόγραμμά μου με valgrind --leak-check=full και δεν εμφάνισε κανένα λάθος ή memory leak.
